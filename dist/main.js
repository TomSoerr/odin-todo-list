(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,':root {\n  --cultured: #f8f9faff;\n  --cultured-2: #e9ecefff;\n  --gainsboro: #dee2e6ff;\n  --light-gray: #ced4daff;\n  --cadet-blue-crayola: #adb5bdff;\n  --sonic-silver: #6c757dff;\n  --davys-grey: #495057ff;\n  --onyx: #343a40ff;\n  --eerie-black: #212529ff;\n  --font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;\n  --focus-color: #89d9fb;\n}\n*, *::before, *::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#content {\n  font-family: var(--font-family);\n  width: 100vw;\n  min-height: 100vh;\n  background-color: var(--cultured-2);\n  color: var(--eerie-black);\n  display: grid;\n  grid-template-columns: auto 1fr;\n}\n\n/* PAGE */\n\n/* SIDEBAR */\n\n#sidebar {\n  background-color: var(--cultured);\n  display: grid;\n  align-content: start;\n}\n\n#sidebar .header {\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin: 1rem 1rem 0.5rem 1rem;\n}\n\n#sidebar .header:first-of-type {\n  font-size: 2.2rem;\n  font-weight: 800;\n}\n\n#sidebar .header:first-of-type span {\n  color: purple;\n}\n\n#sidebar .tab {\n  color: var(--davys-grey);\n  padding: 1rem;\n  display: grid;\n  grid-template-columns: auto  1fr;\n  grid-auto-rows: 1.5rem;\n  gap: 0.5rem;\n  align-items: center;\n  cursor: pointer;\n  border-left: thick solid transparent;\n}\n\n#sidebar .tab img {\n  height: 100%;\n}\n\n#sidebar .tab img:last-child {\n  justify-self: end;\n}\n\n#sidebar .tab input[type="text"] {\n  appearance: none;\n  background-color: var(--cultured);\n  color: var(--davys-grey);\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-bottom: thin solid var(--davys-grey);\n  outline: none;\n  font-size: 1rem;\n  width: 7rem;\n}\n\n#sidebar .tab.active {\n  background-color: var(--cultured-2);\n  border-color: var(--davys-grey);\n}\n\n/* MAIN PAGE */\n\n#main {\n  position: relative;\n  overflow: auto;\n  height: 100vh;\n  padding: 2rem;\n  padding-bottom: 6.5rem;\n  display: grid;\n  align-content: start;\n  gap: 1rem;\n}\n\n#main #current-project {\n  font-size: 1.5rem;\n  font-weight: 700;\n  padding-bottom: 1rem;\n  border-bottom: medium solid var(--light-gray);\n  display: grid;\n  gap: 0.5rem;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  grid-auto-rows: 1.5rem;\n}\n\n#main #current-project img {\n  height: 100%;\n}\n\n#main #add-todo {\n  display: none;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  background-color: var(--cultured);\n  padding: 0.5rem;\n  border-radius: 2.5rem;\n  gap: 0.5rem;\n  grid-template-columns: max-content max-content;\n  grid-auto-rows: 1.5rem;\n  align-items: center;\n  border: thin solid var(--light-gray);\n  margin: 2rem;\n  cursor: pointer;\n}\n\n#main #add-todo.active {\n  display: grid;\n}\n\n#main #add-todo img {\n  height: 100%;\n  width: 100%;\n}\n\n/* TODO CARD */\n\n.todo-obj {\n  background-color: var(--cultured);\n  border: thin solid var(--light-gray);\n  display: grid;\n  min-width: 18rem;\n  grid-template: \n    \'done  priority  title  del\' auto\n    \'.  note  note  note\' 1fr\n    \'.  date  date date\' auto /\n    auto auto 1fr auto;\n  grid-gap: 0.5rem;\n  padding: 1rem;\n  border-radius: 1rem;\n}\n\n.todo-obj .done-checkbox {\n  grid-area: done;\n  justify-self: center;\n  position: relative;\n  cursor: pointer;\n  height: 1.5rem;\n  width: 1.5rem;\n  border-radius: 50%;\n  appearance: none;\n  border: solid thin var(--eerie-black);\n  align-self: center;\n}\n\n.todo-obj .done-checkbox::before {\n  content: "";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--eerie-black);\n  border-radius: 50%;\n  transition: all 0.2s ease-in-out;\n  transform: scale(0);\n}\n\n.todo-obj .done-checkbox:checked::before {\n  transform: scale(0.75);\n}\n\n.todo-obj .priority-box {\n  grid-area: priority;\n  color: var(--sonic-silver);\n  font-size: 1.5rem;\n  position: relative;\n  align-self: center;\n}\n\n.todo-obj .priority-box .priority-popup {\n  position: absolute;\n  display: none;\n  background-color: var(--cultured-2);\n  border-radius: 1rem;\n  border-top-left-radius: 0;\n  border: thin solid var(--light-gray);\n  font-size: 1rem;\n  height: max-content;\n  overflow: hidden;\n  padding: 0.5rem;\n  gap: 0.5rem;\n}\n\n.todo-obj .priority-box .priority-popup.show {\n  display: flex;\n}\n\n.todo-obj .priority-box .priority-popup .priority-btn {\n  border: thin solid var(--sonic-silver);\n  background-color: var(--cultured);\n  padding: 0.3rem;\n  width: 2rem;\n  text-align: center;\n  border-radius: 1rem;\n  cursor: pointer;\n}\n\n.todo-obj .title-box {\n  grid-area: title;\n  font-size: 1.5rem;\n  font-weight: 500;\n  overflow: hidden;\n  overflow-wrap: break-word;\n}\n\n.todo-obj .title-box input[type="text"] {\n  appearance: none;\n  background-color: var(--cultured);\n  width: 100%;\n  border: none;\n  margin: 0;\n  padding: 0;\n  font-size: 1.5rem;\n  height: 1.1em;\n  font-weight: 500;\n  outline: none;\n  border-bottom: thin solid var(--eerie-black);\n}\n\n.todo-obj .delete-btn {\n  grid-area: del;\n  appearance: none;\n  align-self: center;\n  height: 1.5rem;\n  width: 1.5rem;\n  border: none;\n  background-color: var(--cultured);\n  cursor: pointer;\n}\n\n.todo-obj .delete-btn img {\n  height: 100%;\n  width: 100%;\n}\n\n.todo-obj .note-box {\n  grid-area: note;\n  color: var(--sonic-silver);\n  overflow: hidden;\n  overflow-wrap: break-word;\n}\n\n.todo-obj .note-box div {\n  min-height: 1rem;\n  white-space: pre-wrap;\n}\n\n.todo-obj .note-box textarea {\n  appearance: none;\n  resize: vertical;\n  width: 100%;\n  height: 5rem;\n  border: none;\n  color: var(--sonic-silver);\n  font-family: inherit;\n  font-size: 1rem;\n  background-color: var(--cultured);\n  outline: none;\n  border-bottom:  thin solid var(--sonic-silver);\n}\n\n.todo-obj .due-date-box {\n  grid-area: date;\n  color: var(--sonic-silver);\n}\n\n.todo-obj .due-date-box input[type="date"] {\n  appearance: none;\n  padding: 0;\n  margin: 0;\n  background-color: var(--cultured);\n  color: var(--sonic-silver);\n  font-size: 1rem;\n  font-family: var(--font-family);\n  box-sizing: border-box;\n  border: none;\n  outline: none;\n  border-bottom: thin solid var(--sonic-silver);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n  --cultured: #f8f9faff;\n  --cultured-2: #e9ecefff;\n  --gainsboro: #dee2e6ff;\n  --light-gray: #ced4daff;\n  --cadet-blue-crayola: #adb5bdff;\n  --sonic-silver: #6c757dff;\n  --davys-grey: #495057ff;\n  --onyx: #343a40ff;\n  --eerie-black: #212529ff;\n  --font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;\n  --focus-color: #89d9fb;\n}\n*, *::before, *::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#content {\n  font-family: var(--font-family);\n  width: 100vw;\n  min-height: 100vh;\n  background-color: var(--cultured-2);\n  color: var(--eerie-black);\n  display: grid;\n  grid-template-columns: auto 1fr;\n}\n\n/* PAGE */\n\n/* SIDEBAR */\n\n#sidebar {\n  background-color: var(--cultured);\n  display: grid;\n  align-content: start;\n}\n\n#sidebar .header {\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin: 1rem 1rem 0.5rem 1rem;\n}\n\n#sidebar .header:first-of-type {\n  font-size: 2.2rem;\n  font-weight: 800;\n}\n\n#sidebar .header:first-of-type span {\n  color: purple;\n}\n\n#sidebar .tab {\n  color: var(--davys-grey);\n  padding: 1rem;\n  display: grid;\n  grid-template-columns: auto  1fr;\n  grid-auto-rows: 1.5rem;\n  gap: 0.5rem;\n  align-items: center;\n  cursor: pointer;\n  border-left: thick solid transparent;\n}\n\n#sidebar .tab img {\n  height: 100%;\n}\n\n#sidebar .tab img:last-child {\n  justify-self: end;\n}\n\n#sidebar .tab input[type="text"] {\n  appearance: none;\n  background-color: var(--cultured);\n  color: var(--davys-grey);\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-bottom: thin solid var(--davys-grey);\n  outline: none;\n  font-size: 1rem;\n  width: 7rem;\n}\n\n#sidebar .tab.active {\n  background-color: var(--cultured-2);\n  border-color: var(--davys-grey);\n}\n\n/* MAIN PAGE */\n\n#main {\n  position: relative;\n  overflow: auto;\n  height: 100vh;\n  padding: 2rem;\n  padding-bottom: 6.5rem;\n  display: grid;\n  align-content: start;\n  gap: 1rem;\n}\n\n#main #current-project {\n  font-size: 1.5rem;\n  font-weight: 700;\n  padding-bottom: 1rem;\n  border-bottom: medium solid var(--light-gray);\n  display: grid;\n  gap: 0.5rem;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  grid-auto-rows: 1.5rem;\n}\n\n#main #current-project img {\n  height: 100%;\n}\n\n#main #add-todo {\n  display: none;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  background-color: var(--cultured);\n  padding: 0.5rem;\n  border-radius: 2.5rem;\n  gap: 0.5rem;\n  grid-template-columns: max-content max-content;\n  grid-auto-rows: 1.5rem;\n  align-items: center;\n  border: thin solid var(--light-gray);\n  margin: 2rem;\n  cursor: pointer;\n}\n\n#main #add-todo.active {\n  display: grid;\n}\n\n#main #add-todo img {\n  height: 100%;\n  width: 100%;\n}\n\n/* TODO CARD */\n\n.todo-obj {\n  background-color: var(--cultured);\n  border: thin solid var(--light-gray);\n  display: grid;\n  min-width: 18rem;\n  grid-template: \n    \'done  priority  title  del\' auto\n    \'.  note  note  note\' 1fr\n    \'.  date  date date\' auto /\n    auto auto 1fr auto;\n  grid-gap: 0.5rem;\n  padding: 1rem;\n  border-radius: 1rem;\n}\n\n.todo-obj .done-checkbox {\n  grid-area: done;\n  justify-self: center;\n  position: relative;\n  cursor: pointer;\n  height: 1.5rem;\n  width: 1.5rem;\n  border-radius: 50%;\n  appearance: none;\n  border: solid thin var(--eerie-black);\n  align-self: center;\n}\n\n.todo-obj .done-checkbox::before {\n  content: "";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--eerie-black);\n  border-radius: 50%;\n  transition: all 0.2s ease-in-out;\n  transform: scale(0);\n}\n\n.todo-obj .done-checkbox:checked::before {\n  transform: scale(0.75);\n}\n\n.todo-obj .priority-box {\n  grid-area: priority;\n  color: var(--sonic-silver);\n  font-size: 1.5rem;\n  position: relative;\n  align-self: center;\n}\n\n.todo-obj .priority-box .priority-popup {\n  position: absolute;\n  display: none;\n  background-color: var(--cultured-2);\n  border-radius: 1rem;\n  border-top-left-radius: 0;\n  border: thin solid var(--light-gray);\n  font-size: 1rem;\n  height: max-content;\n  overflow: hidden;\n  padding: 0.5rem;\n  gap: 0.5rem;\n}\n\n.todo-obj .priority-box .priority-popup.show {\n  display: flex;\n}\n\n.todo-obj .priority-box .priority-popup .priority-btn {\n  border: thin solid var(--sonic-silver);\n  background-color: var(--cultured);\n  padding: 0.3rem;\n  width: 2rem;\n  text-align: center;\n  border-radius: 1rem;\n  cursor: pointer;\n}\n\n.todo-obj .title-box {\n  grid-area: title;\n  font-size: 1.5rem;\n  font-weight: 500;\n  overflow: hidden;\n  overflow-wrap: break-word;\n}\n\n.todo-obj .title-box input[type="text"] {\n  appearance: none;\n  background-color: var(--cultured);\n  width: 100%;\n  border: none;\n  margin: 0;\n  padding: 0;\n  font-size: 1.5rem;\n  height: 1.1em;\n  font-weight: 500;\n  outline: none;\n  border-bottom: thin solid var(--eerie-black);\n}\n\n.todo-obj .delete-btn {\n  grid-area: del;\n  appearance: none;\n  align-self: center;\n  height: 1.5rem;\n  width: 1.5rem;\n  border: none;\n  background-color: var(--cultured);\n  cursor: pointer;\n}\n\n.todo-obj .delete-btn img {\n  height: 100%;\n  width: 100%;\n}\n\n.todo-obj .note-box {\n  grid-area: note;\n  color: var(--sonic-silver);\n  overflow: hidden;\n  overflow-wrap: break-word;\n}\n\n.todo-obj .note-box div {\n  min-height: 1rem;\n  white-space: pre-wrap;\n}\n\n.todo-obj .note-box textarea {\n  appearance: none;\n  resize: vertical;\n  width: 100%;\n  height: 5rem;\n  border: none;\n  color: var(--sonic-silver);\n  font-family: inherit;\n  font-size: 1rem;\n  background-color: var(--cultured);\n  outline: none;\n  border-bottom:  thin solid var(--sonic-silver);\n}\n\n.todo-obj .due-date-box {\n  grid-area: date;\n  color: var(--sonic-silver);\n}\n\n.todo-obj .due-date-box input[type="date"] {\n  appearance: none;\n  padding: 0;\n  margin: 0;\n  background-color: var(--cultured);\n  color: var(--sonic-silver);\n  font-size: 1rem;\n  font-family: var(--font-family);\n  box-sizing: border-box;\n  border: none;\n  outline: none;\n  border-bottom: thin solid var(--sonic-silver);\n}'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(i[d]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);o&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var d=n[A],s=o.base?d[0]+o.base:d[0],c=a[s]||0,l="".concat(s," ").concat(c);a[s]=c+1;var p=t(l),g={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(g);else{var C=r(g,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var d=o(n,r),s=0;s<a.length;s++){var c=t(a[s]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"07961921628d24775f35.svg",e=(e,t,o)=>{const r=n=>document.createElement(n),a="145933322467867";let i=Math.floor(Math.random()*10**15).toString(),A=!1,d="-",s="",c="",l="no date";const p=()=>{const n=JSON.parse(localStorage.getItem(a));n[i]=[e,A,d,s,c,l],localStorage.setItem(a,JSON.stringify(n))},g=r("input");g.type="checkbox",g.checked=A,g.classList.add("done-checkbox"),g.addEventListener("change",(()=>{A=!A,setTimeout((()=>{g.checked=A,p(),t("shownTodoChanged")}),200)}));const C=r("div");C.classList.add("priority-box");const u=r("span");u.textContent=d;const b=n=>{d=n,u.textContent=d,p(),t("shownTodoChanged")},m=r("div");m.classList.add("priority-popup");const E=r("div");E.classList.add("priority-btn"),E.textContent="-",E.addEventListener("click",(()=>b("-")));const f=r("div");f.classList.add("priority-btn"),f.textContent="!",f.addEventListener("click",(()=>b("!")));const h=r("div");h.classList.add("priority-btn"),h.textContent="!!",h.addEventListener("click",(()=>b("!!")));const B=r("div");B.classList.add("priority-btn"),B.textContent="!!!",B.addEventListener("click",(()=>b("!!!"))),m.append(E,f,h,B),C.append(u,m),C.addEventListener("click",(()=>{m.classList.toggle("show")}));const v=r("div");v.classList.add("title-box");const y=r("span");y.textContent="New todo";const x=r("input");x.type="text",v.append(y),y.addEventListener("click",(()=>{v.firstChild.remove(),x.value=s,v.append(x),x.focus()})),x.addEventListener("blur",(()=>{v.firstChild.remove(),s=x.value,y.textContent=s,p(),v.append(y)}));const w=r("button");w.classList.add("delete-btn");const k=r("img");k.src=n,w.append(k),w.addEventListener("click",(()=>{o(i)}));const j=r("div");j.classList.add("note-box");const S=r("div");S.textContent="";const L=r("textarea");j.append(S),S.addEventListener("click",(()=>{j.firstChild.remove(),L.value=c,j.append(L),L.focus()})),L.addEventListener("blur",(()=>{j.firstChild.remove(),c=L.value,S.textContent=c,p(),j.append(S)}));const T=r("div");T.classList.add("due-date-box");const I=r("span");I.textContent="no date";const O=r("input");O.type="date",T.append(I),I.addEventListener("click",(()=>{T.firstChild.remove(),T.append(O),O.focus()})),O.addEventListener("blur",(()=>{T.firstChild.remove();const{value:n}=O;l=n?`${n.split("-")[2]}.${n.split("-")[1]}.${n.split("-")[0]}`:"no date",I.textContent=l,p(),T.append(I),t("shownTodoChanged")}));const Y=r("div");return Y.classList.add("todo-obj"),Y.append(g,C,v,w,j,T),{project:e,id:i,render:()=>Y,set:(n,e,t,o,r,a)=>{A=n,g.checked=A,d=e,u.textContent=d,s=t,y.textContent=s,c=o,S.textContent=c,l=r,I.textContent=l,a&&(i=a)},get:()=>({done:A,priority:d,title:s,note:c,date:l})}},o=(()=>{const n={};return{subscribe:(e,t)=>{n[e]=n[e]||[],n[e].push(t)},publish:(e,t)=>{n[e]&&n[e].forEach((n=>{n(t)}))}}})(),r=(n,e)=>{o.subscribe(n,e)},a=(n,e)=>{o.publish(n,e)},i=t.p+"38d5f795970601b2c451.svg",A=t.p+"498e000fe00b9d5b1e7b.svg",d=t.p+"46608fd383b03e086de0.svg",s=t.p+"51dfc34901b45ebd3fa5.svg",c=t.p+"622bf66fda8e7da50438.svg",l=t.p+"1cb9a6abcc3794f9f77d.svg";var p=t(379),g=t.n(p),C=t(795),u=t.n(C),b=t(569),m=t.n(b),E=t(565),f=t.n(E),h=t(216),B=t.n(h),v=t(589),y=t.n(v),x=t(426),w={};w.styleTagTransform=y(),w.setAttributes=f(),w.insert=m().bind(null,"head"),w.domAPI=u(),w.insertStyleElement=B(),g()(x.Z,w),x.Z&&x.Z.locals&&x.Z.locals,function(){const n=document.querySelector("#content"),t="145933322467867",o="863720731232428";let p,g=[],C=[];const u=[];let b;const m=n=>{b=n,a("shownTodoChanged")},E=n=>{const e=JSON.parse(localStorage.getItem(t));delete e[n],localStorage.setItem(t,JSON.stringify(e)),g=g.filter((e=>e.id!==n)),a("shownTodoChanged")},f=n=>{const t=e(n,a,E);g.push(t),a("shownTodoChanged")},h=n=>{const e=JSON.parse(localStorage.getItem(o)),r=e.indexOf(n);e.splice(r,1),localStorage.setItem(o,JSON.stringify(e));const a=JSON.parse(localStorage.getItem(t));Object.keys(a).forEach((e=>{a[e][0]===n&&E(e)})),g=g.filter((e=>e.project!==n))},B=()=>{const n=p.project(h);p.appendProject(n)};r("init",(()=>{const r=()=>{const n=e("Default Project",a,E),t=new Date,o=1===t.getDate().toString().length?`0${t.getDate()}`:t.getDate(),r=1===(t.getMonth()+1).toString().length?`0${t.getMonth()+1}`:t.getMonth()+1,i=t.getFullYear();n.set(!0,"!!!","Todo Name","You can add a note here",`${o}.${r}.${i}`),g.push(n)},C=()=>{const n=p.project(h);n.set("Default Project"),u.push("Default Project"),p.appendProject(n)};if(function(n){let e;try{e=window[n];const t="__storage_test__";return e.setItem(t,t),e.removeItem(t),!0}catch(n){return n instanceof DOMException&&(22===n.code||1014===n.code||"QuotaExceededError"===n.name||"NS_ERROR_DOM_QUOTA_REACHED"===n.name)&&e&&0!==e.length}}("localStorage"))if(p=((n,e,t)=>{const o=n=>document.createElement(n),r="863720731232428";let a="";const p=o("div");p.id="current-project";const g=o("img");g.src=l,p.append(g,a);const C=o("div");C.id="add-todo";const u=o("img");u.src=i;const b=o("div");b.textContent="Add Todo",C.append(b,u),C.addEventListener("click",(()=>{n(a)}));const m=o("div");m.id="main",m.append(p,C);const E=o("div");E.id="sidebar";const f=()=>{[...E.children].forEach((n=>{n.classList.remove("active")})),C.classList.remove("active")},h=o("div");h.classList.add("header"),h.append((()=>{const n=o("span");return n.textContent="Zen",n})(),"Do");const B=o("div");B.classList.add("tab");const v=o("img");v.src=d,B.append(v,"All"),B.addEventListener("click",(()=>{f(),B.classList.add("active"),t("All"),p.replaceChildren(g,"All")}));const y=o("div");y.classList.add("tab");const x=o("img");x.src=A,y.append(x,"Today"),y.addEventListener("click",(()=>{f(),y.classList.add("active"),t("Today"),p.replaceChildren(g,"Today")}));const w=o("div");w.classList.add("tab");const k=o("img");k.src=s,w.append(k,"This Week"),w.addEventListener("click",(()=>{f(),w.classList.add("active"),t("This Week"),p.replaceChildren(g,"This Week")}));const j=o("div");j.classList.add("header"),j.textContent="Projects";const S=o("div");S.classList.add("tab"),S.id="add-project";const L=o("img");return L.src=i,S.append("New Project",L),S.addEventListener("click",(()=>{e()})),E.append(h,B,y,w,j,S),{render:()=>[E,m],appendTodo:n=>m.append(n.render()),clearTodo:()=>{for(;m.children[2];)m.children[2].remove()},project:n=>{let e;const i=o("div");i.classList.add("tab");const A=o("input");A.type="text",A.focus();const d=o("img");d.src=c,d.addEventListener("click",(o=>{o.stopPropagation(),C.classList.remove("active"),f(),i.remove(),n(e),B.classList.add("active"),t("All")})),i.append(A,d);const s=()=>{f(),i.classList.add("active"),C.classList.add("active"),a=e,p.replaceChildren(g,a),t(a)};return A.addEventListener("blur",(()=>{if(""===A.value)i.remove();else{e=A.value,i.replaceChildren(e,d),s();const n=JSON.parse(localStorage.getItem(r));n.push(e),localStorage.setItem(r,JSON.stringify(n))}})),i.addEventListener("click",(()=>{"INPUT"!==i.children[0].tagName&&s()})),{render:()=>i,set:n=>{e=n,i.replaceChildren(n,d),s()},projectInput:A}},appendProject:n=>{E.insertBefore(n.render(),S),n.projectInput.focus()}}})(f,B,m),n.append(...p.render()),localStorage.getItem(o)?(u.push(...JSON.parse(localStorage.getItem(o))),u.forEach((n=>{const e=p.project(h);e.set(n),p.appendProject(e)}))):(C(),localStorage.setItem(o,JSON.stringify(u))),localStorage.getItem(t)){const n=JSON.parse(localStorage.getItem(t));Object.keys(n).forEach((t=>{const o=t,[r,i,A,d,s,c]=n[t],l=e(r,a,E);l.id=o,l.set(i,A,d,s,c,o),g.push(l)}))}else{r();const n={};g.forEach((e=>{const{done:t,priority:o,title:r,note:a,date:i}=e.get();n[e.id]=[e.project,t,o,r,a,i]})),localStorage.setItem(t,JSON.stringify(n))}else console.error("Local storage is not available"),C(),r();a("shownTodoChanged")})),r("shownTodoChanged",(()=>{C="All"===b?[...g]:"Today"===b?g.filter((n=>{const{date:e}=n.get(),t=new Date;return e===`${1===t.getDate().toString().length?`0${t.getDate()}`:t.getDate()}.${1===(t.getMonth()+1).toString().length?`0${t.getMonth()+1}`:t.getMonth()+1}.${t.getFullYear()}`})):"This Week"===b?g.filter((n=>(n=>{const{day:e,month:t,year:o}=n.match(/(?<day>\d{2})\.(?<month>\d{2})\.(?<year>\d{4})/).groups,r=new Date;r.setDate(e),r.setMonth(t-1),r.setFullYear(o);const a=new Date;return a.setDate(a.getDate()-(a.getDay()-1)),a.setHours(0,0,0,0),a.getTime()<=r.getTime()&&r.getTime()<a.getTime()+6048e5})(n.get().date))):g.filter((n=>n.project===b)),p.clearTodo(),C.forEach((n=>p.appendTodo(n)))})),a("init")}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,